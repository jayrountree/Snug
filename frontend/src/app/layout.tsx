"use client";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "./components/Navbar";
import { initializeApp } from "firebase/app";
import { FavoritedImagesProvider } from "./FavoritedImagesContext";
import { createContext, useEffect, useState } from "react";
import { getAuth, signOut } from "firebase/auth";
import {
  signInWithPopup,
  GoogleAuthProvider,
  onAuthStateChanged,
} from "firebase/auth";

import { ChakraProvider } from "@chakra-ui/react";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// Your web app's Firebase configuration

const firebaseConfig = {
  apiKey: "AIzaSyDW7kQixbfr_9P4Iv8p0QU4DYrIHf2y3Iw",
  authDomain: "snug-ca812.firebaseapp.com",
  projectId: "snug-ca812",
  storageBucket: "snug-ca812.appspot.com",
  messagingSenderId: "489534713464",
  appId: "1:489534713464:web:24d3a8f2a50e3e837ac78d",
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

// function initData() {
//   jsonData.posts.map((i, index) => {
//     addDoc(collection(db, "all-posts"), {
//       imageName: i.imageName,
//       image: i.image,
//       themeTags: i.themeTags,
//       itemTags: i.itemTags,
//       likes: i.likes,
//       user: i.user,
//       timePosted: i.timePosted,
//     });
//   });
//   console.log("done");
// }

export const FirebaseContext = createContext(null);

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const provider = new GoogleAuthProvider();
  const auth = getAuth();
  const [user, setUser] = useState(null);

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      setUser(user);
    });

    // Clean up subscription on unmount
    return () => unsubscribe();
  }, [auth]);

  function handleSignIn() {
    if (!user) {
      // If user is not signed in, sign them in
      signInWithPopup(auth, provider)
        .then((result) => {
          // Handle successful sign-in
          console.log(result.user);
        })
        .catch((error) => {
          // Handle sign-in errors
          console.error(error);
        });
    } else {
      // If user is already signed in, sign them out
      signOut(auth)
        .then(() => {
          // Handle successful sign-out
          console.log("User signed out successfully");
        })
        .catch((error) => {
          // Handle sign-out errors
          console.error(error);
        });
    }
  }

  return (
    <html lang="en">
      <FirebaseContext.Provider value={app}>
        <body className={inter.className}>
          <FavoritedImagesProvider>
          <ChakraProvider>
            <Navbar user={user} handleSignIn={handleSignIn} />
            {user && (
              <div className="max-w-7xl m-auto px-4 py-12">{children}</div>
            )}
          </ChakraProvider>
          </FavoritedImagesProvider>
        </body>
      </FirebaseContext.Provider>
    </html>
  );
}
